[project]
name = "asyncqueue"
version = "0.1.0"
description = ""
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "anyio>=4.6.2.post1",
    "msgspec>=0.18.6",
]

[project.optional-dependencies]
redis = [
    "redis>=5.2.0",
]

[tool.uv]
dev-dependencies = [
    "coverage>=7.6.4",
    "deptry>=0.20.0",
    "mypy>=1.13.0",
    "pytest>=8.3.3",
    "ruff>=0.8.0",
    "trio>=0.27.0",
    "types-redis>=4.6.0.20241004",
]



[tool.coverage.run]
source = ["asyncqueue"]
command_line = "-m pytest -vv"
branch = true

[tool.coverage.report]
show_missing = true
skip_covered = true
skip_empty = true
precision = 2
#fail_under = 100

[tool.pytest.ini_options]
pythonpath = [
    "."
]


[tool.mypy]
plugins = []

strict = true
follow_imports = "normal"
ignore_missing_imports = false

allow_redefinition = false
disallow_any_explicit = false
ignore_errors = false
local_partial_types = true
no_implicit_optional = true
strict_optional = true
warn_no_return = true
warn_return_any = true
warn_unreachable = true

pretty = true
show_column_numbers = true
show_error_codes = true


[tool.ruff]
src = ["src", "tests"]
[tool.ruff.lint]
fixable = [
    "F",
    "E",
    "W",
    "I",
    "COM",
    "UP",
    "RUF",
]
unfixable = [
    "F841", # Variable  is assigned to but never used
]
select = ["ALL"]
ignore = [
    "E501", # Line Length
    "D10", # Disable mandatory docstrings
    "D203", # one-blank-line-before-class
    "D212", # multi-line-summary-first-line
    "PD", # pandas-vet
    "TC001",
    "TC002",
    "TC003",
    "EXE",
    "COM812",
    "ISC001",
]
[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]
